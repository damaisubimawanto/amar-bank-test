plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}
apply from: "${rootProject.rootDir}/dependencies.gradle"

android {
    namespace 'com.damai.amarbankregistration'
    compileSdk compile_sdk_version

    defaultConfig {
        applicationId "com.damai.amarbankregistration"
        minSdk min_sdk_version
        targetSdk compile_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    testOptions.unitTests {
        includeAndroidResources = true
        returnDefaultValues = true
        all {
            /**
             * The default sdk is 19 (Kitkat) inside folder
             * ```test/resources/robolectric.properties``` file
             * In case we need to test on another os version we can use @Config annotations.
             * Please refer to here http://robolectric.org/configuring
             * or discuss it with android engineer team.
             */
            systemProperty 'robolectric.enabledSdks', '19, 29'
            setIgnoreFailures(true)
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    buildFeatures {
        dataBinding true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation project(':base')
    implementation project(':data')
    implementation project(':domain')

    implementation third_party.loading_button_android

    kapt dagger.compiler

    testImplementation test_library.androidx_core_test
    testImplementation test_library.androidx_test_espresso
    testImplementation test_library.androidx_test_extension
    testImplementation test_library.androidx_test_extension_ktx
    testImplementation test_library.androidx_test_runner
    testImplementation test_library.assertj_core
    testImplementation test_library.junit_core
    testImplementation test_library.junit_jupiter
    testImplementation test_library.kotlinx_coroutines_test
    testImplementation test_library.livedata_test
    testImplementation test_library.mock
    testImplementation test_library.mock_webserver
    testImplementation test_library.robolectric

    testRuntimeOnly test_library.junit_vintage_engine
}

tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}